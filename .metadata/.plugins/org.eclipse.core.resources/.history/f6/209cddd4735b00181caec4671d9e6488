package abstractGameObjects;

import abstractGameObjects.AbstractCard.ArschlochCard;
import abstractGameObjects.AbstractCardStack.ArschlochCardStack;

public class AbstractPlayer {
	
	public static class ArschlochPlayer{
		
		private String username;
		private ArschlochCard[] cardsInHand;
		private int role; // 0 = normie, 1 = secondPlace, 2 = firstPlace, -1 = secondLastPlace, -2 = lastPlace 
		private ArschlochCardStack cardStack;
		
		
		
		
		
		
		public ArschlochPlayer(String username){
			this.setUsername(username);
			cardsInHand = new ArschlochCard[13];
			role = 0;
		}
		
		public void placeCards(ArschlochCard[] cardsToPlace){
			try {
				this.getCardStack().putOnStack(cardsToPlace);	
				for (ArschlochCard aC : cardsToPlace) {
					removeCardFomHand(aC);
				}
			} catch (Exception e) {
				e.printStackTrace();
				System.out.println("failed to place cards");
			}
		}
		

		public void removeCardFomHand(ArschlochCard aC){
			int i = 0;
			for(ArschlochCard aCC : this.getCardsInHand()){
				if(aCC.equals(aC)){
					this.getCardsInHand()[i] = null;
					continue;
				}
				i++;
			}
		}
		
		
		
		
		public String getUsername() {
			return username;
		}
		public void setUsername(String username) {
			this.username = username;
		}
		public ArschlochCard[] getCardsInHand() {
			return cardsInHand;
		}
		public void setCardsInHand(ArschlochCard[] cardsInHand) {
			this.cardsInHand = cardsInHand;
		}
		public int getRole() {
			return role;
		}
		public void setRole(int role) {
			this.role = role;
		}
		public ArschlochCardStack getCardStack() {
			return cardStack;
		}
		public void setCardStack(ArschlochCardStack cardStack) {
			this.cardStack = cardStack;
		}
		
		
		
		
	}

}
